<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="textBox1.Text" xml:space="preserve">
    <value>Người thực hiện: Nguyễn Đức Thắng, Ngô Văn Huy Hoàng

Giới thiệu 
Ứng dụng "List Film" là một ứng dụng quản lý danh sách phim đa năng, giúp bạn theo dõi và cập nhật thông tin về các bộ phim yêu thích của mình. Dưới đây, chúng tôi sẽ giúp bạn hiểu rõ hơn về cách sử dụng ứng dụng này và giải đáp một số câu hỏi thường gặp.

Lưu lý: có 3 loại tài khoản là:
          1. Admin: có toàn quyền làm mọi thứ 
          2. Quản lý: có quyền quản lý (thêm, sửa, xoá)
          3. Người dùng: chỉ có quyền xem và tìm kiếm phim

Câu hỏi và câu trả lời
Q1: Làm thế nào để thêm một bộ phim mới vào danh sách?
A1: Để thêm một bộ phim mới:

Mở ứng dụng "List Film", sau khi đăng nhập vào tài khoản có quyền admin, sau đó vào "Quản lý" và chọn "Quản lý phim".Điền thông tin liên quan về bộ phim, chẳng hạn như tên phim, thời lượng, ngày công chiếu, và thể loại.
Sau đó, tải hình ảnh bìa cho phim bằng cách nhấn nút "Chọn ảnh".
Cuối cùng nhấn nút "Update" để thêm phim vào csdl.

Q2: Làm thế nào để chỉnh sửa thông tin về một bộ phim đã có?
A2: Để chỉnh sửa thông tin về một bộ phim đã có:

Mở ứng dụng "List Film", sau khi đăng nhập vào tài khoản có quyền admin, sau đó vào "Quản lý" và chọn "Quản lý phim".
Chọn 1 phim muốn sửa bằng cách click vào phim trong dataGridView, dữ liệu sẽ hiển thị lên các textBox, comboBox và checkListBox (để hiển thị thể loại) và cả hình ảnhSau khi chỉnh sửa xong hết.
Cuối cùng nhấn nút "Update" để thêm phim vào csdl (sẽ so sánh tên phim nếu trùng thì sẽ sủa còn nếu ko trùng thì sẽ thêm mới).

Q3: Làm thế nào để xóa một bộ phim khỏi danh sách?
A3: Để xóa một bộ phim:

Mở ứng dụng "List Film", sau khi đăng nhập vào tài khoản có quyền admin, sau đó vào "Quản lý" và chọn "Quản lý phim".
Chọn 1 phim muốn sửa bằng cách click vào phim trong dataGridView, dữ liệu sẽ hiển thị lên các textBox, comboBox và checkListBox (để hiển thị thể loại) và cả hình ảnh
Chọn nút "Xóa".Xác nhận quyết định xóa trong hộp thoại xác nhận.

Q4: Làm thế nào để tìm kiếm một bộ phim cụ thể?
A4: Để tìm kiếm một bộ phim cụ thể:
Mở ứng dụng "List Film", sau khi đăng nhập vào tài khoản.
Ở giao diện chính, thanh bên trái, ấn vào "Tìm kiếm".Sử dụng ô tìm kiếm hoặc tìm tùy chọn tương tự trong giao diện.
Nhập tên bộ phim hoặc các thông tin khác cần tìm.
Kết quả tìm kiếm sẽ xuất hiện, cho bạn biết liệu bộ phim đó có trong danh sách hay không.

Q4: Làm thế nào để quản lý tài khoản?
A4: Để quản lý tài quản:

Mở ứng dụng "List Film", sau khi đăng nhập vào tài khoản có quyền admin, sau đó vào "Hệ thống" và chọn "Quản lý tài quản".
Các chức năng tương tự như thêm, sửa, chỉnh sửa phim đã nêu ở trên.

Kết luận
Ứng dụng "List Film" là một công cụ tiện lợi để quản lý danh sách phim yêu thích của bạn. Nếu bạn có thêm câu hỏi hoặc cần hỗ trợ, xin vui lòng liên hệ với chúng tôi qua gmail: nvhhoang286@gmail.com hoặc ducthang140912@gmail.com.

Cảm ơn bạn đã sử dụng ứng dụng "List Film"!</value>
  </data>
</root>